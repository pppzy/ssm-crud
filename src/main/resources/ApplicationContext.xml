<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--整合Mybatis配置开始 -->

    <!--引入外部的连接池配置文件 -->
    <context:property-placeholder location="classpath:datasource/jdbc.properties"></context:property-placeholder>
    <!--配置数据连接池 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}" ></property>
        <property name="password" value="${jdbc.password}"></property>
     </bean>

    <!--配置SqlSessionFactoryBean 工厂类 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定Mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatisconf.xml" ></property>
        <!--配置连接池属性 -->
        <property name="dataSource" ref="druidDataSource"></property>
        <!--指定Mapper映射文件的位置 -->
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"></property>
        <property name="typeAliasesPackage" value="com.itpzy.domain"></property>
    </bean>

    <!--配置扫描dao接口的包，交给spring创建管理，并存入容器中 -->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itpzy.dao"></property>
    </bean>

    <!--配置一个可以批量执行的SqlSession -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>
    <!--整合Mybatis配置结束 -->

    <!--整合Spring配置开始 -->
    <!--配置要扫描的包，把含有service注解的类交由spring容器管理 -->
    <context:component-scan base-package="com.itpzy" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"></context:include-filter>
    </context:component-scan>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>

    <!--配置事务通知增强方法 -->
    <tx:advice id="tx-advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" read-only="true"></tx:method>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED"></tx:method>
        </tx:attributes>
    </tx:advice>
    <!--配置事务通知和切入点对应关系 -->
    <aop:config>
        <!--配置切入点表达式 -->
        <aop:pointcut id="point1" expression="execution(* com.itpzy.service.impl.*.*(..))"></aop:pointcut>
        <!--配置切面:切入点和通知的结合-->
        <aop:advisor advice-ref="tx-advice" pointcut-ref="point1"></aop:advisor>
    </aop:config>
    <!--整合Spring配置结束 -->


</beans>